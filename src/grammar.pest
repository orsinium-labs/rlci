module = { SOI ~ statement+ ~ EOI }
statement = { ( assignment | expression) ~ WSPACE* ~ (EOI | NEWLINE) }
  assignment = { identifier ~ " "* ~ "=" ~ " "* ~ expression }
  expression = { definition | call | identifier | ( "(" ~ expression ~ ")" ) }
    call = {
        ( identifier | ( "(" ~ expression ~ ")" ) )
        ~ (
            " "+
            ~ ( identifier | ( "(" ~ expression ~ ")" ) )
        )+
    }
    definition = { ("\\" | "λ") ~ identifier ~ " "+ ~ expression }
    identifier = { ASCII_ALPHANUMERIC+ | PUNCT+ }

WSPACE = _{ " " | "\t" | "\u{000C}" | "\r" | "\n" }
PUNCT = {
    // there is no `=` yet because it might be ambiguous when assigning to it
    "!" | "#" | "$" | "%" | "&" | "*" | "+" | "-" |
    "/" | "<" | ">" | "?" | "@" | "^" | "~" | "|" |
    // some unicode chars
    "≤" | "≥" | "≈"
}
